{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Resources": {
        "SPAPIIAMRole": {
            "Type" : "AWS::IAM::Role",
            "Properties" : {
                "AssumeRolePolicyDocument" : {
                    "Version": "2012-10-17",
                    "Statement": [{
                            "Effect": "Allow",
                            "Principal": {
                                "AWS": {  
                                    "Fn::Join":[  
                                        ":",
                                        [  
                                            "arn:aws:iam:",
                                            {  
                                                "Ref":"AWS::AccountId"
                                            },
                                            "root"
                                        ]
                                    ]
                                }
                            },
                            "Action": "sts:AssumeRole",
                            "Condition": {}
                        }]
                },
                "Policies" : [ {
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [{
                        "Effect": "Allow",
                        "Action": "execute-api:Invoke",
                        "Resource": "arn:aws:execute-api:*:*:*"
                    }]
                },
                "PolicyName": "SellingPartnerAPI"
            }],
                "RoleName" : "SPAPIIAMRole"
            }
        },
        "LambdaExecutionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [{
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "lambda.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }]
                },
                "Policies": [{
                    "PolicyName": "SPDSLambdaPolicy",
                    "PolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [{
                            "Sid": "VisualEditor0",
                            "Effect": "Allow",
                            "Action": ["sts:AssumeRole","logs:CreateLogGroup","logs:CreateLogStream","logs:PutLogEvents"],
                            "Resource": "*"
                        }]
                    }
                }],
                "RoleName": "SPAPILambdaRole"
            }
        },
        "LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Handler": "index.lambda_handler",
                "Role": {
                    "Fn::GetAtt": ["LambdaExecutionRole", "Arn"]
                },
                "Code": {
                    "ZipFile": {
                        "Fn::Join": ["\n", [
                            "import json",
                            "import boto3",
                            "import os",
                            "\n",
                            "def lambda_handler(event, context):",
                            "\n",
                            "   client = boto3.client('sts')",
                            "   aws_account_id = context.invoked_function_arn.split(\":\")[4]",
                            "   iamrole = 'arn:aws:iam::'+aws_account_id+':role/SPAPIIAMRole'",
                            "   response = client.assume_role(",
                            "       RoleArn= iamrole,",
                            "       RoleSessionName='SPAPIRoleSession'",
                            "   )",
                            "\n",
                            "   print (\"Access Key =\", response['Credentials']['AccessKeyId'])",
                            "   print (\"Secret Key =\", response['Credentials']['SecretAccessKey'])",
                            "   print (\"Session Token =\", response['Credentials']['SessionToken'])",
                            "\n",
                            "   return {",
                            "       'statusCode': 200,",
                            "       'body': json.dumps('Hello from Lambda!')",
                            "   }"

                        ]]
                    }
                },
                "Runtime": "python3.8"
            }
        }
    }
}